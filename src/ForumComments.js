import React from 'react';
import { Table, Divider, Tag } from 'antd';
import "./ForumComments.css"


import PropTypes from 'prop-types';
import { Route, Link, BrowserRouter as Router } from 'react-router-dom';
import Thread from './Thread.js'
import { fetchThreadTopics } from "./redux/actions/threadTopicActions.js";
import { connect } from "react-redux";

import AntThread from './AntThread.js';

import AntForumPost from './AntForumPost.js';

/** 
The table is generated by specifying a fields object and a data object, then passing them to the Table Object.
**/
/** 
Fields we want: Title Summary Creator

TODO: Find a way to fit the data from the DB into the fields we have for the table. Create the data obj, so it can be dynamic.
**/

class ForumComments extends React.Component {

  constructor(props) {
    super(props);
    this.buildTree = this.buildTree.bind(this);
    this.convertTreeToPosts = this.convertTreeToPosts.bind(this);
    this.state = {
      userToProfilePic: {},
    };
  }
  componentDidMount(){
    console.log("component did mount of forum comments2")
    // here is where we should query the data for our posts
    console.log("so the component mounts but the render never gets called?")
  }

  /**
  Takes in a list of post data from the database, sorting by ts.
  Outputs a list with a tree structure that can be DFSed for our comment order.
  **/
  buildTree(data){
    // data is a list of objects that has already been filtered
    // want to return an object we can dfs and make our list of comments
    let tree = []
    let idToPost = {}
    let currObj;
    for (let i = 0; i < data.length; i += 1){
      currObj = data[i];
      currObj.children = []; // add children key to object
      if (currObj.parent_id in idToPost) {
        let parent = idToPost[currObj.parent_id];
        parent.children.push(currObj);
      } else {
        tree.push(currObj)
      }
      idToPost[currObj.post_id] = currObj
    }
    return tree
  }

  /**
  We dfs through the data with a tree structure and return an array
  filled with our posts in the order we want to display them
  **/
  convertTreeToPosts(data) {
    let commentArray = [];
    for (const object of data) {
      let stack = [object];
      while (stack.length) {
        let curr = stack.pop();
        // turn curr into an antforumpost then add it to the comment array
        commentArray.push(<AntForumPost data={curr} />);
        for (let i = curr.children.length - 1; i >= 0; i -= 1) {
          let currChild = curr.children[i];
          stack.push(currChild);
        }
      }
    }
    return commentArray
  }

  render (){
    console.log("we enter the forum comments render")
    /** 
    generate data for the table from the queries
    **/
    // let myData = [
    //     {
    //     "creator": "NarutoLover44",
    //     "profilePic": "https://assets.pokemon.com/assets/cms2/img/pokedex/full/001.png",
    //     "indentation_level": 1,
    //     "post_text": "This is all the text for the description. I can place any text I want here and it will show up below.",
    //     "is_main_post": false,
    //     "ts": "some datetime obj here",
    //     "parent_id": 0,
    //     "post_id": 1
    //   },
    //   {
    //     "creator": "sasukeIsTheBest",
    //     "profilePic": "https://i.pinimg.com/236x/77/7b/63/777b632c2c3601eca106352ddbccb07d.jpg",
    //     "indentation_level": 2,
    //     "post_text": "This is a comment that is suppose to be a reply to the one above! Let's see if it works. it should be indented since it's a reply.",
    //     "is_main_post": false,
    //     "ts": "some datetime obj here",
    //     "parent_id": 1,
    //     "post_id": 2
    //   },
    //   {
    //     "creator": "GenfiWatchMoreHunterxHunter",
    //     "profilePic": "https://www.gstatic.com/tv/thumb/tvbanners/10964192/p10964192_b_v8_aa.jpg",
    //     "indentation_level": 3,
    //     "post_text": "This comment has an indentation level of 3, so it should be a comment of the nested comment! this doesn't look too bad so far if i say so myself.",
    //     "is_main_post": false,
    //     "ts": "some datetime obj here",
    //     "parent_id": 2,
    //     "post_id": 3
    //   },
    //   {
    //     "creator": "TheReasonableGuy72",
    //     "profilePic": "https://qph.fs.quoracdn.net/main-qimg-affdc3d2c25fe8afb9d5d9cff88d9a29",
    //     "indentation_level": 2,
    //     "post_text": "Though, I'm not sure how much sense it makes to have three levels of indents... Many places only offer a couple, like facebook.",
    //     "is_main_post": false,
    //     "ts": "some datetime obj here",
    //     "parent_id": 1,
    //     "post_id": 4
    //   }
    // ]

    // let myProps5 = {
    //   "creator": "CrazyClownMan",
    //   "profilePic": "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/d7c99ebb-62eb-45ff-8ecf-da92d86c6d59/ddp780g-10c2a033-2863-467e-b9e8-16d0fd22c790.png/v1/fill/w_1024,h_1450,q_80,strp/hxh___hisoka_morrow_by_khalilxpirates_ddp780g-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD0xNDUwIiwicGF0aCI6IlwvZlwvZDdjOTllYmItNjJlYi00NWZmLThlY2YtZGE5MmQ4NmM2ZDU5XC9kZHA3ODBnLTEwYzJhMDMzLTI4NjMtNDY3ZS1iOWU4LTE2ZDBmZDIyYzc5MC5wbmciLCJ3aWR0aCI6Ijw9MTAyNCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19._qDuMYQrCxygXSCjKXML2mY2f6u-9Ubq0foxa0Xs1bI",
    //   "post_text": "This is the main post test! Let's see how this goes.",
    //   "is_main_post": true,
    //   "title": "This is my main post title",
    //   "ts": "some datetime obj here"
    // };
    console.log("i'm very confused why i don't see this print statements")
    let allPosts = [];
    let myTree = this.buildTree(this.props.data);
    let commentsArray = this.convertTreeToPosts(myTree);
    console.log("WHY DO I NOT SEE THESE PRINT STATEMENTS?")
    console.log(commentsArray)
    
    if (this.props.data.length > 0) {
      console.log(" we enter the state where props.data is somethin")
      return (
        <>
          <div className="comments-container">
          <h2>Comments</h2>
          {commentsArray}
          </div>
        </>
      );
    } else {
            console.log(" we enter the state where props.data is undefined!!")
      return (
        <p1> Be the first the comment! </p1>
      );
    }
    
  }
}

export default ForumComments;


