TODO:

make google app with email ngoy.apps@gmail.com
add it to django admin page
create log in with google button and link it properly

create log in with facebook button and link it properly

figure out social logout
allauth.facebook.logout() should do the trick for facebook?
accounts/logout is an api endpoint as well i think

----
once we have login and logout, the next thing to do is to make a customer user info and tie it to our default django users

def get_by_natural_key(self):
       return self.username
class UserManager(models.Manager):
   def get_by_natural_key(self):
       return self.username

 is a place to start looking for that

 ----

 once we have custom user info (that should probably be stored in state)
 we can start to work on making our tables nice 
 (ant table)


 -------------------
 when a user logs in, they get redirected to the main page. have the main page call the get user session token!! then pass it over to the navbar!!

 just use login with google and login with facebook react buttons to get some id and 
 then use that id to map it to a user account in django
 and if there isn't one, then create one...

 ----
 we now need to create users when people login with google or facebook
do it by email so that if they log in through google iwth the same email, that works too!
after that we need to make the pages pretty
----
Set up JWT with the links genfi sent
1. https://pypi.org/project/django-rest-framework-social-oauth2/
https://www.youtube.com/watch?v=kjp8jYJhujA
Python Social Auth
1. https://yeti.co/blog/client-vs-server-oauth-flows-with-rest-apis/
2. https://yeti.co/blog/social-auth-with-django-rest-framework/

he wants something where the token has to be sent every time to make a request on the backend

AFTER
clean up the code
place comments
make notes for what you learned for people in the future
after you clean the code, make commits more frequently 
make the commit messages say everything you added to the code

MAKE SURE THAT THE FORUM IS MADE SO THAT WE CAN EASILY ADD THEM ANYWHERE (like in the middle of a blog post)
and make it s.t. there's a prop which tells it which db to pull from and if the db doesn't exist make it's own table
